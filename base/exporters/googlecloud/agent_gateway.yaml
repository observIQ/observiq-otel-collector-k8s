# yamllint disable rule:line-length
---
apiVersion: v1
kind: Service
metadata:
  name: observiq-gateway
  namespace: default
  labels:
    app: observiq-gateway
spec:
  ports:
    - port: 4317
      protocol: TCP
      targetPort: 4317
  selector:
    app: observiq-gateway
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: observiq-gateway
  namespace: default
  labels:
    app: observiq-gateway
spec:
  mode: deployment
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317

    processors:
      # If running within GKE, try to detect the
      # cloud provider, region, availability zone, cluster name.
      resourcedetection:
        detectors: [gke]
        timeout: 2s
        override: true

      # Google requires k8s.cluster.name, cloud.region, cloud.availability_zone and
      # cloud.platform in order to map to container, pod, node, and cluster resource types.
      resource/all:
        attributes:
        - key: cloud.region
          value: us-east1
          action: insert
        - key: cloud.availability_zone
          value: us-east1-b
          action: insert
        - key: cloud.platform
          value: gcp_kubernetes_engine
          action: insert

      # Logs: Preserve resource labels that are discarded after mapping to
      # google monitored resource type. The following are preserved by
      # google exporter log pipelines:
      #     -> k8s.cluster.name: STRING(google-poc)
      #     -> k8s.container.name: STRING(otc-container)
      #     -> k8s.namespace.name: STRING(default)
      #     -> k8s.pod.name: STRING(observiq-node-collector-46r2h)
      # The following should be moved to labels
      #     -> k8s.deployment.name: STRING(observiq-node)
      #     -> k8s.node.name: STRING(minikube)
      #     -> k8s.pod.start_time: STRING(2022-07-18 19:02:31 +0000 UTC)
      #     -> k8s.pod.uid: STRING(82aa9f33-f049-4d6f-b329-a8bf3ef4d819)
      #     -> container.image.name: STRING(bmedora/observiq-otel-collector-amd64)
      #     -> container.image.tag: STRING(k8s-dev.0)
      logstransform/k8spodlabels:
        operators:
          - type: move
            if: resource["k8s.deployment.name"] != nil
            from: resource["k8s.deployment.name"]
            to: attributes["k8s.deployment.name"]
          - type: move
            if: resource["k8s.node.name"] != nil
            from: resource["k8s.node.name"]
            to: attributes["k8s.node.name"]
          - type: move
            if: resource["k8s.pod.start_time"] != nil
            from: resource["k8s.pod.start_time"]
            to: attributes["k8s.pod.start_time"]
          - type: move
            if: resource["k8s.pod.uid"] != nil
            from: resource["k8s.pod.uid"]
            to: attributes["k8s.pod.uid"]
          - type: move
            if: resource["container.image.name"] != nil
            from: resource["container.image.name"]
            to: attributes["container.image.name"]
          - type: move
            if: resource["container.image.tag"] != nil
            from: resource["container.image.tag"]
            to: attributes["container.image.tag"]

      batch/metrics:
        send_batch_max_size: 200
        send_batch_size: 200
        timeout: 5s

      batch/logs:
        send_batch_max_size: 200
        send_batch_size: 200
        timeout: 5s

    exporters:
      googlecloud:
        metric:
          resource_filters:
            - prefix: k8s
            - prefix: cloud
            - prefix: container

      logging:

    extensions:
      health_check:

    service:
      extensions:
        - health_check
      pipelines:
        metrics:
          receivers:
            - otlp
          processors:
            - resourcedetection
            - resource/all
            - batch/metrics
          exporters:
            - logging
            - googlecloud

        logs:
          receivers:
            - otlp
          processors:
            - resourcedetection
            - resource/all
            - logstransform/k8spodlabels
            - batch/logs
          exporters:
            - logging
            - googlecloud

  image: observiq/observiq-otel-collector:1.4.0
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
