---
apiVersion: v1
kind: Service
metadata:
  name: observiq-gateway
  namespace: default
  labels:
    app: observiq-gateway
spec:
  ports:
  - port: 4317
    protocol: TCP
    targetPort: 4317
  selector:
    app: observiq-gateway
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: observiq-gateway
  namespace: default
  labels:
    app: observiq-gateway
spec:
  mode: deployment
  config: |
    receivers:
      prometheus/collector:
        config:
          scrape_configs:
            - job_name: 'observiq-otel-collector'
              scrape_interval: 60s
              static_configs:
                - targets: ['127.0.0.1:8888']
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317

    processors:
      # Resource attributes will be used to map the metrics
      # to Google Monitored Resource type 'k8s_node'
      # https://cloud.google.com/logging/docs/api/v2/resource-list#resource-types
      resource/collector:
        attributes:
        - key: k8s.namespace.name
          value: "${K8S_NAMESPACE}"
          action: insert
        - key: k8s.pod.name
          value: "${K8S_POD_NAME}"
          action: insert
        - key: k8s.node.name
          value: "${K8S_NODE_NAME}"
          action: insert

      # Google requires k8s.cluster.name, cloud.region, cloud.availability_zone and
      # cloud.platform in order to map to container, pod, node, and cluster resource types.
      resource/all:
        attributes:
        - key: k8s.cluster.name
          value: poc
          action: insert
        - key: cloud.region
          value: us-east1
          action: insert
        - key: cloud.availability_zone
          value: us-east1-b
          action: insert
        - key: cloud.platform
          value: gcp_kubernetes_engine
          action: insert

      batch/metrics:
        send_batch_max_size: 200
        send_batch_size: 200
        timeout: 5s

      batch/logs:
        send_batch_max_size: 200
        send_batch_size: 200
        timeout: 5s
    
    exporters:
      googlecloud:
        metric:
          resource_filters:
            - prefix: k8s
            - prefix: cloud
            - prefix: container

      logging:

    extensions:
      health_check:

    service:
      extensions:
        - health_check
      pipelines:
        # Pipeline for collectors own metrics
        #
        # TODO(jsirianni): Does not work with gcp, gives duplicate label key error.
        # metrics/collector:
        #   #receivers:
        #   #  - prometheus/collector
        #   processors:
        #     - resource/collector
        #     - resource/all
        #   exporters:
        #     - logging
        #     - googlecloud
        # Pipeline for ingested metrics
        #
        metrics/ingest:
          receivers:
            - otlp
          processors:
            - resource/all
            - batch/metrics
          exporters:
            - logging
            - googlecloud
        # Pipeline for ingested logs
        #
        logs:
          receivers:
            - otlp
          processors:
            - batch/logs
          exporters:
            - logging
            - googlecloud

  image: observiq/observiq-otel-collector:1.2.0
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
  volumes:
    - name: gcp-credentials
      secret:
        secretName: gcp-credentials
  volumeMounts:
    - mountPath: /otel/credentials.json
      name: gcp-credentials
      subPath: credentials.json
  env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /otel/credentials.json
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: K8S_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: K8S_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name

