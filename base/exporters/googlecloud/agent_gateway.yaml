---
apiVersion: v1
kind: Service
metadata:
  name: observiq-gateway
  namespace: default
  labels:
    app: observiq-gateway
spec:
  ports:
  - port: 4317
    protocol: TCP
    targetPort: 4317
  selector:
    app: observiq-gateway
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: observiq-gateway
  namespace: default
  labels:
    app: observiq-gateway
spec:
  mode: deployment
  config: |
    receivers:
      prometheus/collector:
        config:
          scrape_configs:
            - job_name: 'observiq-otel-collector'
              scrape_interval: 60s
              static_configs:
                - targets: ['127.0.0.1:8888']
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317

    processors:
      # resource attributes will be used to map the metrics
      # to Google Monitored Resource type 'k8s_node'
      # https://cloud.google.com/logging/docs/api/v2/resource-list#resource-types
      resource/collector:
        attributes:
        - key: opencensus.resourcetype
          value: pod
          action: upsert
        - key: k8s.cluster.name
          value: poc
          action: upsert
        - key: k8s.cluster.location
          value: us-east1
          action: upsert
        - key: k8s.namespace.name
          value: "${K8S_NAMESPACE}"
          action: upsert
        - key: k8s.pod.name
          value: "${K8S_POD_NAME}"
          action: upsert
        - key: k8s.node.name
          value: "${K8S_NODE_NAME}"
          action: upsert

      batch/metrics:
        send_batch_max_size: 200
        send_batch_size: 200
        timeout: 5s

      batch/logs:
        send_batch_max_size: 200
        send_batch_size: 200
        timeout: 5s
    
    exporters:
      googlecloud/metrics:
        resource_mappings:
          # K8s cluster mapping
          #
          - source_type: k8s
            target_type: k8s_cluster
            label_mappings:
              - source_key: k8s.cluster.name
                target_key: cluster_name
              - source_key: k8s.cluster.location
                target_key: location
          
          # K8s node mapping
          #
          - source_type: node
            target_type: k8s_node
            label_mappings:
              - source_key: k8s.cluster.name
                target_key: cluster_name
              - source_key: k8s.cluster.location
                target_key: location
              - source_key: k8s.node.name
                target_key: node_name

          # K8s pod mapping
          #
          - source_type: pod
            target_type: k8s_pod
            label_mappings:
              - source_key: k8s.pod.name
                target_key: pod_name
              - source_key: k8s.namespace.name
                target_key: namespace_name
              - source_key: k8s.cluster.name
                target_key: cluster_name
              - source_key: k8s.cluster.location
                target_key: location

          # K8s container mapping
          #
          - source_type: container
            target_type: k8s_container
            label_mappings:
              - source_key: k8s.cluster.name
                target_key: cluster_name
              - source_key: k8s.cluster.location
                target_key: location
              - source_key: k8s.namespace.name
                target_key: namespace_name
              - source_key: k8s.pod.name
                target_key: pod_name
              - source_key: k8s.container.name
                target_key: container_name

      googlecloud/logs:

      logging:

    extensions:
      health_check:

    service:
      extensions:
        - health_check
      pipelines:
        # Pipeline for collectors own metrics
        #
        metrics/collector:
          receivers:
            - prometheus/collector
          processors:
            - resource/collector
          exporters:
            - logging
            - googlecloud/metrics
        # Pipeline for ingested metrics
        #
        metrics/ingest:
          receivers:
            - otlp
          processors:
            - batch/metrics
          exporters:
            - logging
            - googlecloud/metrics
        # Pipeline for ingested logs
        #
        logs:
          receivers:
            - otlp
          processors:
            - batch/logs
          exporters:
            - logging
            - googlecloud/logs

  image: observiq/observiq-otel-collector:1.1.0
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
  volumes:
    - name: gcp-credentials
      secret:
        secretName: gcp-credentials
  volumeMounts:
    - mountPath: /otel/credentials.json
      name: gcp-credentials
      subPath: credentials.json
  env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /otel/credentials.json
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: K8S_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: K8S_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name

