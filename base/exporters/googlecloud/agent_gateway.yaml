---
apiVersion: v1
kind: Service
metadata:
  name: observiq-gateway
  namespace: default
  labels:
    app: observiq-gateway
spec:
  ports:
  - port: 4317
    protocol: TCP
    targetPort: 4317
  selector:
    app: observiq-gateway
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: observiq-gateway
  namespace: default
  labels:
    app: observiq-gateway
spec:
  mode: deployment
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317

    processors:
      # If running within GKE or EKS, try to detect the
      # cloud provider, region, availability zone, cluster name.
      resourcedetection:
        detectors: [gke, eks]
        timeout: 2s
        override: true

      # Google requires k8s.cluster.name, cloud.region, cloud.availability_zone and
      # cloud.platform in order to map to container, pod, node, and cluster resource types.
      resource/all:
        attributes:
        - key: cloud.region
          value: us-east1
          action: insert
        - key: cloud.availability_zone
          value: us-east1-b
          action: insert
        - key: cloud.platform
          value: gcp_kubernetes_engine
          action: insert

      batch/metrics:
        send_batch_max_size: 200
        send_batch_size: 200
        timeout: 5s

      batch/logs:
        send_batch_max_size: 200
        send_batch_size: 200
        timeout: 5s
    
    exporters:
      googlecloud:
        metric:
          resource_filters:
            - prefix: k8s
            - prefix: cloud
            - prefix: container

      logging:

    extensions:
      health_check:

    service:
      extensions:
        - health_check
      pipelines:
        metrics:
          receivers:
            - otlp
          processors:
            - resourcedetection
            - resource/all
            - batch/metrics
          exporters:
            - logging
            - googlecloud

        logs:
          receivers:
            - otlp
          processors:
            - resourcedetection
            - resource/all
            - batch/logs
          exporters:
            - logging
            - googlecloud

  image: observiq/observiq-otel-collector:1.2.0
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
