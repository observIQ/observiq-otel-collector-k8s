---
apiVersion: v1
kind: Service
metadata:
  name: observiq-gateway
  namespace: default
  labels:
    app: observiq-gateway
spec:
  ports:
    - port: 4317
      protocol: TCP
      targetPort: 4317
  selector:
    app: observiq-gateway
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: observiq-gateway
  namespace: default
  labels:
    app: observiq-gateway
spec:
  mode: deployment
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317

    processors:
      # If running within GKE, try to detect the
      # cloud provider, region, availability zone, and k8s.cluster.name.
      resourcedetection:
        detectors: [gke]
        timeout: 2s
        override: false

      batch/metrics:
        send_batch_max_size: 200
        send_batch_size: 200
        timeout: 5s

      batch/logs:
        send_batch_max_size: 200
        send_batch_size: 200
        timeout: 5s

    exporters:
      otlp/newrelic:
          endpoint: https://otlp.nr-data.net:443
          headers:
              - api-key: $NEWRELIC_API_KEY
          tls:
              insecure: false

      logging:

    extensions:
      health_check:

    service:
      extensions:
        - health_check
      pipelines:
        metrics:
          receivers:
            - otlp
          processors:
            - resourcedetection
            - batch/metrics
          exporters:
            - logging
            - otlp/newrelic
        logs:
          receivers:
            - otlp
          processors:
            - resourcedetection
            - batch/logs
          exporters:
            - logging
            - otlp/newrelic

  image: observiq/observiq-otel-collector:1.4.0
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
  env:
    - name: NEWRELIC_API_KEY
      valueFrom:
        secretKeyRef:
          name: newrelic-credentials
          key: api-key
          optional: false
