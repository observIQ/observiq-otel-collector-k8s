apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: observiq-otel-collector-metric-agent
  namespace: default
spec:
  mode: daemonset
  hostNetwork: true
  config: |
    receivers:
      kubeletstats/node:
        auth_type: serviceAccount
        collection_interval: 60s
        insecure_skip_verify: true
        k8s_api_config:
          auth_type: serviceAccount
        metric_groups:
        - node

      kubeletstats/pod:
        auth_type: serviceAccount
        collection_interval: 60s
        insecure_skip_verify: true
        k8s_api_config:
          auth_type: serviceAccount
        metric_groups:
        - pod

      kubeletstats/container:
        auth_type: serviceAccount
        collection_interval: 60s
        insecure_skip_verify: true
        k8s_api_config:
          auth_type: serviceAccount
        metric_groups:
        - container

    processors:
      # resource attributes will be used to map the metrics
      # to Google Monitored Resource type 'k8s_node'
      # https://cloud.google.com/logging/docs/api/v2/resource-list#resource-types
      #
      # opencensus.resourcetype is not set by default, unlike the cluster metrics receiver.
      # it is required for mapping from opencensus.resourcetype(node) to Google type "k8s_node".
      resource/node:
        attributes:
          - key: opencensus.resourcetype
            value: node
            action: upsert
      resource/pod:
        attributes:
          - key: opencensus.resourcetype
            value: pod
            action: upsert      
      resource/container:
        attributes:
          - key: opencensus.resourcetype
            value: container
            action: upsert
      resource/all:
        attributes:
          - key: k8s.node.name
            value: "${K8S_NODE_NAME}"
            action: upsert
          - key: k8s.cluster.name
            value: poc
            action: upsert
          # Must map to a GCP region or zone even if running outside of Google Cloud. This is a hard
          # limitation of the monitored resource types.
          - key: k8s.cluster.location
            value: us-east1
            action: upsert

      # Preserve important resource atributes by copying them
      # to the metrics labels, as Google exporter will strip
      # them in favor of the monitored resource type.
      # 
      resourceattributetransposer/addnodename:
        operations:
          - from: k8s.node.name
            to: node_name

      batch:
        send_batch_max_size: 200
        send_batch_size: 200
        timeout: 2s

    exporters:
      otlp:
        endpoint: observiq-otel-collector-gateway:4317
        tls:
          insecure: true

    service:
      pipelines:
        metrics/node:
          receivers:
            - kubeletstats/node
          processors:
            - resource/all
            - resource/node
            - batch
          exporters:
            - otlp
        metrics/pod:
          receivers:
            - kubeletstats/pod
          processors:
            - resource/all
            - resource/pod
            - resourceattributetransposer/addnodename
            - batch
          exporters:
            - otlp
        metrics/container:
          receivers:
            - kubeletstats/container
          processors:
            - resource/all
            - resource/container
            - resourceattributetransposer/addnodename
            - batch
          exporters:
            - otlp
  
  image: observiq/observiq-otel-collector:v0.4.1
  serviceAccount: observiq-otel-collector
  resources:
    limits:
      memory: "250Mi"
      cpu: 200m
    requests:
      memory: "50Mi"
      cpu: 50m
  env:
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
